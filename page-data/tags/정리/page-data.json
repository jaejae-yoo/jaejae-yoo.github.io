{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-tag-query-tsx","path":"/tags/정리","result":{"data":{"allPost":{"nodes":[{"__typename":"MdxPost","slug":"/spring-singleton","title":"[Spring] Singleton","date":"30.03.2021","excerpt":"Spring  Singleton 스프링이없는 DI 컨테이너는 요청을 할 때마다 새로운 객체를 생성하게 된다. \n➜ 엄청난 트래픽이 있는 상태에서 새로운 객체를 매번 생성하면 큰 메모리 낭비 따라서 객체를…","timeToRead":1,"description":null,"tags":[{"name":"정리","slug":"정리"}]},{"__typename":"MdxPost","slug":"/io-c-제어의-역전-di-의존성-주입","title":"IoC(제어의 역전), DI(의존성 주입)","date":"25.03.2021","excerpt":"제어의 역전 IoC(Inversion of Control…","timeToRead":1,"description":null,"tags":[{"name":"정리","slug":"정리"}]},{"__typename":"MdxPost","slug":"/method-overriding","title":"method overriding","date":"24.03.2021","excerpt":"…","timeToRead":1,"description":null,"tags":[{"name":"정리","slug":"정리"}]},{"__typename":"MdxPost","slug":"/객체-지향-설계-5-가지-원칙-solid","title":"객체 지향 설계 5가지 원칙 (SOLID)","date":"22.03.2021","excerpt":"좋은 객체 지향 설계를 위한 5가지 원칙 SRP: 단일 책임 원칙(single responsibility principle) OCP: 개방-폐쇄 원칙 (Open/closed principle) LSP: 리스코프 치환 원칙 (Liskov…","timeToRead":1,"description":null,"tags":[{"name":"정리","slug":"정리"}]}]}},"pageContext":{"slug":"정리","name":"정리","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}