{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/객체-지향-설계-5-가지-원칙-solid","result":{"data":{"post":{"__typename":"MdxPost","slug":"/객체-지향-설계-5-가지-원칙-solid","title":"객체 지향 설계 5가지 원칙 (SOLID)","date":"22.03.2021","tags":[{"name":"정리","slug":"정리"}],"description":null,"canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"객체 지향 설계 5가지 원칙 (SOLID)\",\n  \"date\": \"2021-03-22T00:00:00.000Z\",\n  \"tags\": [\"정리\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"blockquote\", null, mdx(\"h3\", {\n    parentName: \"blockquote\"\n  }, \"\\uC88B\\uC740 \\uAC1D\\uCCB4 \\uC9C0\\uD5A5 \\uC124\\uACC4\\uB97C \\uC704\\uD55C 5\\uAC00\\uC9C0 \\uC6D0\\uCE59\"), mdx(\"br\", null)), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"SRP: \\uB2E8\\uC77C \\uCC45\\uC784 \\uC6D0\\uCE59(single responsibility principle)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"OCP: \\uAC1C\\uBC29-\\uD3D0\\uC1C4 \\uC6D0\\uCE59 (Open/closed principle)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"LSP: \\uB9AC\\uC2A4\\uCF54\\uD504 \\uCE58\\uD658 \\uC6D0\\uCE59 (Liskov substitution principle)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"ISP: \\uC778\\uD130\\uD398\\uC774\\uC2A4 \\uBD84\\uB9AC \\uC6D0\\uCE59 (Interface segregation principle)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"DIP: \\uC758\\uC874\\uAD00\\uACC4 \\uC5ED\\uC804 \\uC6D0\\uCE59 (Dependency inversion principle)\"), mdx(\"hr\", null), mdx(\"br\", null))), mdx(\"h4\", null, \"1. SRP \\uB2E8\\uC77C \\uCC45\\uC784 \\uC6D0\\uCE59(single responsibility principle)\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u279C \", mdx(\"b\", null, \" \\uD55C \\uD074\\uB798\\uC2A4\\uB294 \\uD558\\uB098\\uC758 \\uCC45\\uC784\\uB9CC \\uAC00\\uC838\\uC57C \\uD55C\\uB2E4. \"))), mdx(\"p\", null, \"\\uB9CC\\uC57D \\uC5B4\\uB5A0\\uD55C \\uBD80\\uBD84\\uC744 \\uBCC0\\uACBD\\uD558\\uC600\\uC744 \\uB54C, \\uD30C\\uAE09 \\uD6A8\\uACFC\\uAC00 \\uD06C\\uB2E4\\uBA74 \\uB2E8\\uC77C \\uCC45\\uC784 \\uC6D0\\uCE59\\uC774 \\uC798 \\uC9C0\\uCF1C\\uC9C0\\uC9C0 \\uC54A\\uC740 \\uAC83\\uC774\\uB2E4. \"), mdx(\"p\", null, \"\\uB530\\uB77C\\uC11C SRP \\uC6D0\\uCE59\\uC5D0 \\uB530\\uB77C \\uCF54\\uB4DC\\uAC00 \\uBCC0\\uACBD\\uB418\\uB354\\uB77C\\uB3C4 \\uD30C\\uAE09 \\uD6A8\\uACFC\\uAC00 \\uC801\\uB3C4\\uB85D \\uC124\\uACC4\\uD574\\uC57C \\uD55C\\uB2E4.  \"), mdx(\"hr\", null), mdx(\"br\", null), mdx(\"h4\", null, \"2. OCP \\uAC1C\\uBC29-\\uD3D0\\uC1C4 \\uC6D0\\uCE59 (Open/closed principle)\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u279C \", mdx(\"b\", null, \" \\uD655\\uC7A5\\uC5D0\\uB294 \\uC5F4\\uB824 \\uC788\\uC73C\\uB098 \\uBCC0\\uACBD\\uC5D0\\uB294 \\uB2EB\\uD600 \\uC788\\uC5B4\\uC57C \\uD55C\\uB2E4. \"))), mdx(\"p\", null, \"\\uAE30\\uB2A5\\uC744 \\uCD94\\uAC00\\uD560 \\uC218 \\uC788\\uC5B4\\uC57C \\uD558\\uC9C0\\uB9CC \\uAE30\\uC874\\uC758 \\uCF54\\uB4DC\\uAC00 \\uBCC0\\uACBD\\uB418\\uC9C0 \\uC54A\\uC544\\uC57C \\uD55C\\uB2E4\\uB294 \\uC758\\uBBF8\\uC774\\uB2E4.\"), mdx(\"hr\", null), mdx(\"br\", null), mdx(\"h4\", null, \"3. LSP \\uB9AC\\uC2A4\\uCF54\\uD504 \\uCE58\\uD658 \\uC6D0\\uCE59 (Liskov substitution principle)\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u279C \", mdx(\"b\", null, \" \\uD504\\uB85C\\uADF8\\uB7A8\\uC758 \\uC815\\uD655\\uC131\\uC744 \\uAE68\\uB728\\uB9AC\\uC9C0 \\uC54A\\uC73C\\uBA70, \\uD558\\uC704 \\uD0C0\\uC785\\uC758 \\uC778\\uC2A4\\uD134\\uC2A4(\\uBD80\\uBAA8 \\uD074\\uB798\\uC2A4\\uB97C \\uC790\\uC2DD \\uD074\\uB798\\uC2A4\\uB85C)\\uB85C \\uBCC0\\uACBD\\uD560 \\uC218 \\uC788\\uC5B4\\uC57C \\uD55C\\uB2E4. \"))), mdx(\"hr\", null), mdx(\"br\", null), mdx(\"h4\", null, \"4. ISP \\uC778\\uD130\\uD398\\uC774\\uC2A4 \\uBD84\\uB9AC \\uC6D0\\uCE59 (Interface segregation principle)\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u279C  \", mdx(\"b\", null, \" \\uBC94\\uC6A9\\uC801\\uC778 \\uC778\\uD130\\uD398\\uC774\\uC2A4 \\uD55C \\uAC1C\\uBCF4\\uB2E4, \\uD2B9\\uC815 \\uD0C0\\uAC9F\\uC744 \\uC704\\uD55C \\uC778\\uD130\\uD398\\uC774\\uC2A4 \\uC5EC\\uB7EC \\uAC1C\\uAC00 \\uB0AB\\uB2E4 \"))), mdx(\"hr\", null), mdx(\"br\", null), mdx(\"h4\", null, \"5. DIP \\uC758\\uC874\\uAD00\\uACC4 \\uC5ED\\uC804 \\uC6D0\\uCE59 (Dependency inversion principle)\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u279C  \", mdx(\"b\", null, \" \\uAD6C\\uD604\\uD55C \\uD074\\uB798\\uC2A4\\uC5D0 \\uC758\\uC874\\uD558\\uC9C0\\uB9D0\\uACE0, \\uC778\\uD130\\uD398\\uC774\\uC2A4\\uC5D0 \\uC758\\uC874\\uD574\\uC57C \\uD55C\\uB2E4.  \"))), mdx(\"p\", null, \"(\\u201C\\uCD94\\uC0C1\\uD654\\uC5D0 \\uC758\\uC874\\uD574\\uC57C\\uC9C0, \\uAD6C\\uCCB4\\uD654\\uC5D0 \\uC758\\uC874\\uD558\\uBA74 \\uC548\\uB41C\\uB2E4.\\u201D)\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"좋은 객체 지향 설계를 위한 5가지 원칙 SRP: 단일 책임 원칙(single responsibility principle) OCP: 개방-폐쇄 원칙 (Open/closed principle) LSP: 리스코프 치환 원칙 (Liskov…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/객체-지향-설계-5-가지-원칙-solid","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}