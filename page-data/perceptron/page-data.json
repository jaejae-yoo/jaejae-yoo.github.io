{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/perceptron","result":{"data":{"post":{"__typename":"MdxPost","slug":"/perceptron","title":"Perceptron","date":"21.09.2020","tags":[{"name":"DL","slug":"dl"}],"description":null,"canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Perceptron\",\n  \"date\": \"2020-09-21T00:00:00.000Z\",\n  \"tags\": [\"DL\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"blockquote\", null, mdx(\"h2\", {\n    parentName: \"blockquote\"\n  }, \"Perceprtron\")), mdx(\"h5\", null, \"\\uD37C\\uC149\\uD2B8\\uB860\\uC774\\uB780 \\uB2E4\\uC218\\uC758 \\uC2E0\\uD638\\uB97C \\uC785\\uB825\\uBC1B\\uC544 \\uD558\\uB098\\uC758 \\uC2E0\\uD638\\uB97C \\uCD9C\\uB825\\uD558\\uB294 \\uAC83\\uC744 \\uB9D0\\uD55C\\uB2E4.\"), mdx(\"p\", null, \"\\uBC11\\uC758 \\uC608\\uC2DC\\uB97C \\uAE30\\uC900\\uC73C\\uB85C x1, x2\\uB294 \\uC785\\uB825 \\uC2E0\\uD638, w1\\uACFC w2 \\uAC00\\uC911\\uCE58, y\\uB294 \\uCD9C\\uB825 \\uC2E0\\uD638\\uB97C \\uC758\\uBBF8\\uD55C\\uB2E4. \"), mdx(\"p\", null, \"\\uC785\\uB825 \\uC2E0\\uD638\\uAC00 \\uB178\\uB4DC\\uC5D0 \\uBCF4\\uB0B4\\uC9C8 \\uB54C \\uAC01\\uAC01\\uC758 \\uACE0\\uC720\\uD55C \\uAC00\\uC911\\uCE58 w1 \\uACFC w2\\uAC00 \\uACF1\\uD574\\uC9C0\\uAC8C \\uB418\\uACE0, \\uC2E0\\uD638\\uC758 \\uCD1D\\uD569\\uC774 \\uC784\\uACC4\\uAC12\\uC744 \\uB118\\uC5B4\\uC124 \\uB54C\\uB9CC 1\\uC744 \\uCD9C\\uB825\\uD558\\uAC8C \\uB418\\uB294 \\uAC83\\uC774\\uB2E4.\"), mdx(\"h3\", null, \"1. \\uB2E8\\uCE35 \\uD37C\\uC149\\uD2B8\\uB860\"), mdx(\"h5\", null, \"AND GATE\"), mdx(\"p\", null, \" AND \\uAC8C\\uC774\\uD2B8\\uB294 \\uC785\\uB825\\uC774 \\uBAA8\\uB450 1\\uC778 \\uACBD\\uC6B0\\uC5D0\\uB9CC 1\\uC744 \\uCD9C\\uB825\\uD55C\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"def AND(x1, x2):\\n  w1, w2, theta = 0.3, 0.3, 0.5\\n  tmp = x1*w1 + x2*w2\\n\\n  if tmp <= theta:    #\\uC784\\uACC4\\uAC12\\uC744 \\uB118\\uC9C0 \\uBABB \\uD55C \\uACBD\\uC6B0\\n    return 0\\n  elif tmp > theta:   #\\uC784\\uACC4\\uAC12\\uC744 \\uB118\\uC740 \\uACBD\\uC6B0\\n    return 1\\n\\nprint(AND(0, 0)) #0\\nprint(AND(1, 0)) #0\\nprint(AND(0, 1)) #0\\nprint(AND(1, 1)) #1\\n\")), mdx(\"h5\", null, \"NAND GATE\"), mdx(\"p\", null, \"NAND \\uAC8C\\uC774\\uD2B8\\uB294 \\uC785\\uB825\\uC774 \\uBAA8\\uB450 1\\uC778 \\uACBD\\uC6B0\\uC5D0\\uB9CC 0\\uC744 \\uCD9C\\uB825\\uD55C\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"def NAND(x1, x2):\\n    x = np.array([x1, x2])\\n    w = np.array([-0.3, -0.3])\\n    b = 0.5\\n    tmp = np.sum(w*x) + b\\n    if tmp <= 0:\\n        return 0\\n    else:\\n        return 1\\n\\nprint(NAND(0, 0)) #1\\nprint(NAND(1, 0)) #1\\nprint(NAND(0, 1)) #1\\nprint(NAND(1, 1)) #0\\n\")), mdx(\"h5\", null, \"OR GATE\"), mdx(\"p\", null, \"OR \\uAC8C\\uC774\\uD2B8\\uB294 \\uC785\\uB825\\uC758 \\uAC12\\uC774 \\uD558\\uB098\\uB9CC 1\\uC774\\uC5B4\\uB3C4 1\\uC744 \\uCD9C\\uB825\\uD55C\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"def OR(x1, x2):\\n    x = np.array([x1, x2])\\n    w = np.array([0.3, 0.3])\\n    b = -0.2\\n    tmp = np.sum(w*x) + b\\n    if tmp <= 0:\\n        return 0\\n    else:\\n        return 1\\nprint(OR(0, 0)) #0\\nprint(OR(1, 0)) #1\\nprint(OR(0, 1)) #1\\nprint(OR(1, 1)) #1\\n\")), mdx(\"h5\", null, \"NOR GATE\"), mdx(\"p\", null, \"NOR \\uAC8C\\uC774\\uD2B8\\uB294 \\uC785\\uB825\\uC774 \\uBAA8\\uB450 0\\uC778 \\uACBD\\uC6B0\\uC5D0\\uB9CC 1\\uC744 \\uCD9C\\uB825\\uD55C\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"def NOR(x1, x2):\\n  x = np.array([x1, x2])\\n  w = np.array([-0.3, -0.3])\\n  b = 0.2\\n  tmp = np.sum(w*x) + b\\n  if tmp <= 0:\\n      return 0\\n  else:\\n      return 1\\nprint(NOR(0, 0)) #1\\nprint(NOR(1, 0)) #0\\nprint(NOR(0, 1)) #0\\nprint(NOR(1, 1)) #0\\n\")), mdx(\"h3\", null, \"2. \\uB2E4\\uCE35 \\uD37C\\uC149\\uD2B8\\uB860\"), mdx(\"p\", null, \" \\uB2E4\\uCE35 \\uD37C\\uC149\\uD2B8\\uB860\\uC744 \\uAD6C\\uD604\\uD558\\uC5EC \\uBE44\\uC120\\uD615 \\uC601\\uC5ED\\uC744 \\uB098\\uD0C0\\uB0BC \\uC218 \\uC788\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"def XOR(x1, x2):\\n    s1 = NAND(x1, x2)\\n    s2 = OR(x1, x2)\\n    y = AND(s1, s2)\\n    return y\\n\\nprint(XOR(0, 0)) #0\\nprint(XOR(1, 0)) #1\\nprint(XOR(0, 1)) #1\\nprint(XOR(1, 1)) #0\\n\")), mdx(\"h3\", null, \"\\uCC38\\uACE0\\uBB38\\uD5CC\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Deep Learning from Scratch\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Perceprtron 퍼셉트론이란 다수의 신호를 입력받아 하나의 신호를 출력하는 것을 말한다. 밑의 예시를 기준으로 x1, x2는 입력 신호, w1과 w2 가중치, y는 출력 신호를 의미한다.  입력 신호가 노드에 보내질 때 각각의 고유한 가중치 w…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/perceptron","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}