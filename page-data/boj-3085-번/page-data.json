{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/boj-3085-번","result":{"data":{"post":{"__typename":"MdxPost","slug":"/boj-3085-번","title":"BOJ_3085번","date":"03.02.2021","tags":[{"name":"BOJ","slug":"boj"}],"description":null,"canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"BOJ_3085번\",\n  \"date\": \"2021-02-03T00:00:00.000Z\",\n  \"tags\": [\"BOJ\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"blockquote\", null, mdx(\"h2\", {\n    parentName: \"blockquote\"\n  }, \"[BOJ]\", \" 3085\\uBC88\")), mdx(\"h4\", null, \"\\uBB38\\uC81C\"), mdx(\"p\", null, \"\\uC0C1\\uADFC\\uC774\\uB294 \\uC5B4\\uB838\\uC744 \\uC801\\uC5D0 \\\"\\uBD04\\uBCF4\\uB2C8 (Bomboni)\\\" \\uAC8C\\uC784\\uC744 \\uC990\\uACA8\\uD588\\uB2E4.\"), mdx(\"p\", null, \"\\uAC00\\uC7A5 \\uCC98\\uC74C\\uC5D0 N\\xD7N\\uD06C\\uAE30\\uC5D0 \\uC0AC\\uD0D5\\uC744 \\uCC44\\uC6CC \\uB193\\uB294\\uB2E4. \\uC0AC\\uD0D5\\uC758 \\uC0C9\\uC740 \\uBAA8\\uB450 \\uAC19\\uC9C0 \\uC54A\\uC744 \\uC218\\uB3C4 \\uC788\\uB2E4. \\uC0C1\\uADFC\\uC774\\uB294 \\uC0AC\\uD0D5\\uC758 \\uC0C9\\uC774 \\uB2E4\\uB978 \\uC778\\uC811\\uD55C \\uB450 \\uCE78\\uC744 \\uACE0\\uB978\\uB2E4. \\uADF8 \\uB2E4\\uC74C \\uACE0\\uB978 \\uCE78\\uC5D0 \\uB4E4\\uC5B4\\uC788\\uB294 \\uC0AC\\uD0D5\\uC744 \\uC11C\\uB85C \\uAD50\\uD658\\uD55C\\uB2E4. \\uC774\\uC81C, \\uBAA8\\uB450 \\uAC19\\uC740 \\uC0C9\\uC73C\\uB85C \\uC774\\uB8E8\\uC5B4\\uC838 \\uC788\\uB294 \\uAC00\\uC7A5 \\uAE34 \\uC5F0\\uC18D \\uBD80\\uBD84(\\uD589 \\uB610\\uB294 \\uC5F4)\\uC744 \\uACE0\\uB978 \\uB2E4\\uC74C \\uADF8 \\uC0AC\\uD0D5\\uC744 \\uBAA8\\uB450 \\uBA39\\uB294\\uB2E4.\"), mdx(\"p\", null, \"\\uC0AC\\uD0D5\\uC774 \\uCC44\\uC6CC\\uC9C4 \\uC0C1\\uD0DC\\uAC00 \\uC8FC\\uC5B4\\uC84C\\uC744 \\uB54C, \\uC0C1\\uADFC\\uC774\\uAC00 \\uBA39\\uC744 \\uC218 \\uC788\\uB294 \\uC0AC\\uD0D5\\uC758 \\uCD5C\\uB300 \\uAC1C\\uC218\\uB97C \\uAD6C\\uD558\\uB294 \\uD504\\uB85C\\uADF8\\uB7A8\\uC744 \\uC791\\uC131\\uD558\\uC2DC\\uC624.\"), mdx(\"h5\", null, \"\\uC785\\uB825\"), mdx(\"p\", null, \"\\uCCAB\\uC9F8 \\uC904\\uC5D0 \\uBCF4\\uB4DC\\uC758 \\uD06C\\uAE30 N\\uC774 \\uC8FC\\uC5B4\\uC9C4\\uB2E4. (3 \\u2264 N \\u2264 50)\"), mdx(\"p\", null, \"\\uB2E4\\uC74C N\\uAC1C \\uC904\\uC5D0\\uB294 \\uBCF4\\uB4DC\\uC5D0 \\uCC44\\uC6CC\\uC838 \\uC788\\uB294 \\uC0AC\\uD0D5\\uC758 \\uC0C9\\uC0C1\\uC774 \\uC8FC\\uC5B4\\uC9C4\\uB2E4. \\uBE68\\uAC04\\uC0C9\\uC740 C, \\uD30C\\uB780\\uC0C9\\uC740 P, \\uCD08\\uB85D\\uC0C9\\uC740 Z, \\uB178\\uB780\\uC0C9\\uC740 Y\\uB85C \\uC8FC\\uC5B4\\uC9C4\\uB2E4.\"), mdx(\"p\", null, \"\\uC0AC\\uD0D5\\uC758 \\uC0C9\\uC774 \\uB2E4\\uB978 \\uC778\\uC811\\uD55C \\uB450 \\uCE78\\uC774 \\uC874\\uC7AC\\uD558\\uB294 \\uC785\\uB825\\uB9CC \\uC8FC\\uC5B4\\uC9C4\\uB2E4.\"), mdx(\"h5\", null, \"\\uCD9C\\uB825\"), mdx(\"p\", null, \"\\uCCAB\\uC9F8 \\uC904\\uC5D0 \\uC0C1\\uADFC\\uC774\\uAC00 \\uBA39\\uC744 \\uC218 \\uC788\\uB294 \\uC0AC\\uD0D5\\uC758 \\uCD5C\\uB300 \\uAC1C\\uC218\\uB97C \\uCD9C\\uB825\\uD55C\\uB2E4.\"), mdx(\"h4\", null, mdx(\"strong\", {\n    parentName: \"h4\"\n  }, \"\\uD480\\uC774\")), mdx(\"p\", null, \"\\uC6D0\\uB798 \\uC0C9\\uC774 \\uB2E4\\uB978 \\uC778\\uC811\\uD55C \\uB450 \\uCE78\\uC744 \\uACE8\\uB77C\\uC11C \\uAD50\\uD658\\uD558\\uACE0, \\uBC14\\uB010 \\uBD80\\uBD84\\uC758 \\uD589\\uACFC \\uC5F4\\uB9CC \\uD0D0\\uC0C9\\uD574\\uC92C\\uB294\\uB370 \\uACC4\\uC18D \\uD2C0\\uB824\\uC11C \\uADF8\\uB0E5 \\uBC14\\uAFC0 \\uB54C\\uB9C8\\uB2E4 \\uC804\\uCCB4 \\uD0D0\\uC0C9 \\uD574\\uC92C\\uB354\\uB2C8 \\uD574\\uACB0\\uB418\\uC5C8\\uB2E4..\"), mdx(\"p\", null, \"\\uC0C9\\uC774 \\uB2E4\\uB978 \\uC778\\uC811\\uD55C \\uB450 \\uCE78\\uC740 \\uC704\\uC5D0\\uC11C \\uBD80\\uD130 \\uC21C\\uCC28\\uC801\\uC73C\\uB85C (\\uC67C\\uCABD\\uC5D0\\uC11C \\uC624\\uB978\\uCABD\\uC73C\\uB85C, \\uC704\\uC5D0\\uC11C \\uC544\\uB798\\uB85C) \\uC9C4\\uD589\\uD588\\uB2E4. \"), mdx(\"p\", null, \"\\uB2F9\\uBD84\\uAC04 \\uC0AC\\uD0D5 \\uC548\\uBA39\\uACE0 \\uC2F6\\uC740 \\uBB38\\uC81C\\uC600\\uB2E4,,\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \" \", \"[\\uCF54\\uB4DC]\", \" \")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"N=int(input())\\ngraph =[]\\nfor num in range(N):\\n  graph.append(list(input()))\\n\\ndef row():\\n  list1=[]\\n  for _x in range(N):\\n    cnt = 0\\n    for _y in range(N-1):\\n      if graph[_x][_y] == graph[_x][_y+1]:\\n        cnt +=1\\n      else:\\n        list1.append(cnt)\\n        cnt = 0\\n    list1.append(cnt)\\n  return max(list1)\\n\\ndef column():\\n  list1=[]\\n  for _y in range(N):\\n    _cnt = 0\\n    for _x in range(N-1):\\n      if graph[_x][_y] == graph[_x+1][_y]:\\n        _cnt +=1\\n      else:\\n        list1.append(_cnt)\\n        _cnt = 0\\n    list1.append(_cnt)\\n  return max(list1)\\n\\nanswer =[]\\nfor i in range(N-1):\\n  for j in range(N-1):\\n    r,d,sub_c,_r,_d,_sub_r=0,0,0,0,0,0\\n    list1=[]\\n    if graph[i][j] != graph[i][j+1]:\\n      graph[i][j], graph[i][j+1]= graph[i][j+1], graph[i][j]   \\n      r = row()\\n      if r != 0:\\n        r+=1\\n      d= column()\\n      if d != 0:\\n        d+=1\\n      \\n    answer.append(max([r,d]))\\n    graph[i][j], graph[i][j+1]= graph[i][j+1], graph[i][j]  \\n\\n    if graph[i][j] != graph[i+1][j]:\\n      graph[i][j], graph[i+1][j]= graph[i+1][j], graph[i][j]\\n      _r = row()\\n      if _r != 0:\\n        _r+=1\\n      _d = column()\\n      if _d != 0:\\n        _d+=1\\n    answer.append(max([_r,_d]))\\n    graph[i][j], graph[i+1][j]= graph[i+1][j], graph[i][j]\\n\\nfor x in range(N-1):\\n  if graph[N-1][x] != graph[N-1][x+1]:\\n      graph[N-1][x], graph[N-1][x+1]= graph[N-1][x+1], graph[N-1][x]\\n      r = row()\\n      if r != 0:\\n        r+=1\\n      d= column()\\n      if d != 0:\\n        d+=1\\n  answer.append(max([r,d]))\\n  graph[N-1][x], graph[N-1][x+1]= graph[N-1][x+1], graph[N-1][x]\\n\\nfor y in range(N-1):\\n  if graph[y][N-1] != graph[y+1][N-1]:\\n    graph[y][N-1], graph[y+1][N-1]= graph[y+1][N-1], graph[y][N-1]\\n    _r = row()\\n    if _r != 0:\\n      _r+=1\\n    _d = column()\\n    if _d != 0:\\n      _d+=1\\n  answer.append(max([_r,_d]))\\n  graph[y][N-1], graph[y+1][N-1]= graph[y+1][N-1], graph[y][N-1]\\n\\nprint(max(answer))\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"BOJ  3085번 문제 상근이는 어렸을 적에 \"봄보니 (Bomboni)\" 게임을 즐겨했다. 가장 처음에 N×N…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/boj-3085-번","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}