{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/boj-11724-번","result":{"data":{"post":{"__typename":"MdxPost","slug":"/boj-11724-번","title":"BOJ_11724번","date":"27.02.2021","tags":[{"name":"BOJ","slug":"boj"}],"description":null,"canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"BOJ_11724번\",\n  \"date\": \"2021-02-27T00:00:00.000Z\",\n  \"tags\": [\"BOJ\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"blockquote\", null, mdx(\"h2\", {\n    parentName: \"blockquote\"\n  }, \"[BOJ]\", \" 11724\\uBC88\")), mdx(\"h4\", null, \"\\uBB38\\uC81C\"), mdx(\"p\", null, \"\\uBC29\\uD5A5 \\uC5C6\\uB294 \\uADF8\\uB798\\uD504\\uAC00 \\uC8FC\\uC5B4\\uC84C\\uC744 \\uB54C, \\uC5F0\\uACB0 \\uC694\\uC18C (Connected Component)\\uC758 \\uAC1C\\uC218\\uB97C \\uAD6C\\uD558\\uB294 \\uD504\\uB85C\\uADF8\\uB7A8\\uC744 \\uC791\\uC131\\uD558\\uC2DC\\uC624.\"), mdx(\"h5\", null, \"\\uC785\\uB825\"), mdx(\"p\", null, \"\\uCCAB\\uC9F8 \\uC904\\uC5D0 \\uC815\\uC810\\uC758 \\uAC1C\\uC218 N\\uACFC \\uAC04\\uC120\\uC758 \\uAC1C\\uC218 M\\uC774 \\uC8FC\\uC5B4\\uC9C4\\uB2E4. (1 \\u2264 N \\u2264 1,000, 0 \\u2264 M \\u2264 N\\xD7(N-1)/2) \\uB458\\uC9F8 \\uC904\\uBD80\\uD130 M\\uAC1C\\uC758 \\uC904\\uC5D0 \\uAC04\\uC120\\uC758 \\uC591 \\uB05D\\uC810 u\\uC640 v\\uAC00 \\uC8FC\\uC5B4\\uC9C4\\uB2E4. (1 \\u2264 u, v \\u2264 N, u \\u2260 v) \\uAC19\\uC740 \\uAC04\\uC120\\uC740 \\uD55C \\uBC88\\uB9CC \\uC8FC\\uC5B4\\uC9C4\\uB2E4.\"), mdx(\"h5\", null, \"\\uCD9C\\uB825\"), mdx(\"p\", null, \"\\uCCAB\\uC9F8 \\uC904\\uC5D0 \\uC5F0\\uACB0 \\uC694\\uC18C\\uC758 \\uAC1C\\uC218\\uB97C \\uCD9C\\uB825\\uD55C\\uB2E4.\"), mdx(\"h4\", null, mdx(\"strong\", {\n    parentName: \"h4\"\n  }, \"\\uD480\\uC774\")), mdx(\"p\", null, \"\\uAE30\\uBCF8\\uC801\\uC778 dfs \\uBB38\\uC81C\\uC774\\uB2E4.\"), mdx(\"p\", null, \"\\uBC29\\uD5A5\\uC774 \\uC5C6\\uC73C\\uBBC0\\uB85C \\uC5F0\\uACB0\\uB41C \\uB178\\uB4DC\\uB97C \\uB05D\\uAE4C\\uC9C0 \\uD0D0\\uC0C9\\uD558\\uC5EC\\uC11C \\uADF8\\uB798\\uD504\\uC758 \\uAC1C\\uC218\\uAC00 \\uBA87 \\uAC1C\\uC778\\uC9C0 \\uAD6C\\uD558\\uBA74\\uB41C\\uB2E4.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \" \", \"[\\uCF54\\uB4DC]\", \" \")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"import sys\\nsys.setrecursionlimit(3000)\\nN, M = map(int, input().split())\\ngraph = [[] for x in range(N + 1)]\\nvisited = [False]*(N+1)\\n\\nfor num in range(M):\\n    A, B = map(int, input().split())\\n    graph[A].append(B)\\n    graph[B].append(A)\\n\\ndef dfs(num, graph, visited, cnt):\\n    if visited[num] == False:\\n        visited[num] = True\\n        for x in graph[num]:\\n                dfs(x, graph, visited ,cnt+1)\\n    else:\\n        return 0\\n    return 1\\n\\n_cnt=0\\nfor num in range(1, N + 1):\\n    _cnt+=dfs(num, graph, visited, 0)\\nprint(_cnt)\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"BOJ  11724번 문제 방향 없는 그래프가 주어졌을 때, 연결 요소 (Connected Component)의 개수를 구하는 프로그램을 작성하시오. 입력 첫째 줄에 정점의 개수 N과 간선의 개수 M이 주어진다. (1 ≤ N ≤ 1,000, 0 ≤ M…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/boj-11724-번","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}