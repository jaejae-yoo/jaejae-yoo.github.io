{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/java-boj-11497-번","result":{"data":{"post":{"__typename":"MdxPost","slug":"/java-boj-11497-번","title":"[Java] BOJ 11497번","date":"11.03.2021","tags":[{"name":"BOJ","slug":"boj"}],"description":null,"canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"[Java] BOJ 11497번\",\n  \"date\": \"2021-03-11T00:00:00.000Z\",\n  \"tags\": [\"BOJ\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"blockquote\", null, mdx(\"h2\", {\n    parentName: \"blockquote\"\n  }, \"[BOJ]\", \" 11497\\uBC88\")), mdx(\"h4\", null, \"\\uBB38\\uC81C\"), mdx(\"p\", null, \"\\uB0A8\\uADDC\\uB294 \\uD1B5\\uB098\\uBB34\\uB97C \\uC138\\uC6CC \\uB193\\uACE0 \\uAC74\\uB108\\uB6F0\\uAE30\\uB97C \\uC88B\\uC544\\uD55C\\uB2E4. \\uADF8\\uB798\\uC11C N\\uAC1C\\uC758 \\uD1B5\\uB098\\uBB34\\uB97C \\uC6D0\\uD615\\uC73C\\uB85C \\uC138\\uC6CC \\uB193\\uACE0 \\uB6F0\\uC5B4\\uB180\\uB824\\uACE0 \\uD55C\\uB2E4. \\uB0A8\\uADDC\\uB294 \\uC6D0\\uD615\\uC73C\\uB85C \\uC778\\uC811\\uD55C \\uC606 \\uD1B5\\uB098\\uBB34\\uB85C \\uAC74\\uB108\\uB6F0\\uB294\\uB370, \\uC774\\uB54C \\uAC01 \\uC778\\uC811\\uD55C \\uD1B5\\uB098\\uBB34\\uC758 \\uB192\\uC774 \\uCC28\\uAC00 \\uCD5C\\uC18C\\uAC00 \\uB418\\uAC8C \\uD558\\uB824 \\uD55C\\uB2E4.\\n\\uD1B5\\uB098\\uBB34 \\uAC74\\uB108\\uB6F0\\uAE30\\uC758 \\uB09C\\uC774\\uB3C4\\uB294 \\uC778\\uC811\\uD55C \\uB450 \\uD1B5\\uB098\\uBB34 \\uAC04\\uC758 \\uB192\\uC774\\uC758 \\uCC28\\uC758 \\uCD5C\\uB313\\uAC12\\uC73C\\uB85C \\uACB0\\uC815\\uB41C\\uB2E4. \\uB192\\uC774\\uAC00 {2, 4, 5, 7, 9}\\uC778 \\uD1B5\\uB098\\uBB34\\uB4E4\\uC744 \\uC138\\uC6B0\\uB824 \\uD55C\\uB2E4\\uACE0 \\uAC00\\uC815\\uD558\\uC790. \\uC774\\uB97C \", \"[2, 9, 7, 4, 5]\", \"\\uC758 \\uC21C\\uC11C\\uB85C \\uC138\\uC6E0\\uB2E4\\uBA74, \\uAC00\\uC7A5 \\uCCAB \\uD1B5\\uB098\\uBB34\\uC640 \\uAC00\\uC7A5 \\uB9C8\\uC9C0\\uB9C9 \\uD1B5\\uB098\\uBB34 \\uC5ED\\uC2DC \\uC778\\uC811\\uD574 \\uC788\\uB2E4. \\uC989, \\uB192\\uC774\\uAC00 2\\uC778 \\uAC83\\uACFC \\uB192\\uC774\\uAC00 5\\uC778 \\uAC83\\uB3C4 \\uC11C\\uB85C \\uC778\\uC811\\uD574 \\uC788\\uB2E4. \\uBC30\\uC5F4 \", \"[2, 9, 7, 4, 5]\", \"\\uC758 \\uB09C\\uC774\\uB3C4\\uB294 |2-9| = 7\\uC774\\uB2E4. \\uC6B0\\uB9AC\\uB294 \\uB354 \\uB098\\uC740 \\uBC30\\uC5F4 \", \"[2, 5, 9, 7, 4]\", \"\\uB97C \\uB9CC\\uB4E4 \\uC218 \\uC788\\uC73C\\uBA70 \\uC774 \\uBC30\\uC5F4\\uC758 \\uB09C\\uC774\\uB3C4\\uB294 |5-9| = 4\\uC774\\uB2E4. \\uC774 \\uBC30\\uC5F4\\uBCF4\\uB2E4 \\uB09C\\uC774\\uB3C4\\uAC00 \\uB0AE\\uC740 \\uBC30\\uC5F4\\uC740 \\uB9CC\\uB4E4 \\uC218 \\uC5C6\\uC73C\\uBBC0\\uB85C \\uC774 \\uBC30\\uC5F4\\uC774 \\uB0A8\\uADDC\\uAC00 \\uCC3E\\uB294 \\uB2F5\\uC774 \\uB41C\\uB2E4.\"), mdx(\"h5\", null, \"\\uC785\\uB825\"), mdx(\"p\", null, \"\\uC785\\uB825\\uC740 T\\uAC1C\\uC758 \\uD14C\\uC2A4\\uD2B8 \\uCF00\\uC774\\uC2A4\\uB85C \\uC774\\uB8E8\\uC5B4\\uC838 \\uC788\\uB2E4. \\uCCAB \\uC904\\uC5D0 T\\uAC00 \\uC8FC\\uC5B4\\uC9C4\\uB2E4.\"), mdx(\"p\", null, \"\\uC774\\uC5B4\\uC9C0\\uB294 \\uAC01 \\uC904\\uB9C8\\uB2E4 \\uCCAB \\uC904\\uC5D0 \\uD1B5\\uB098\\uBB34\\uC758 \\uAC1C\\uC218\\uB97C \\uB098\\uD0C0\\uB0B4\\uB294 \\uC815\\uC218 N(5 \\u2264 N \\u2264 10,000), \\uB458\\uC9F8 \\uC904\\uC5D0 \\uAC01 \\uD1B5\\uB098\\uBB34\\uC758 \\uB192\\uC774\\uB97C \\uB098\\uD0C0\\uB0B4\\uB294 \\uC815\\uC218 Li\\uAC00 \\uC8FC\\uC5B4\\uC9C4\\uB2E4. (1 \\u2264 Li \\u2264 100,000)\"), mdx(\"h5\", null, \"\\uCD9C\\uB825\"), mdx(\"p\", null, \"\\uAC01 \\uD14C\\uC2A4\\uD2B8 \\uCF00\\uC774\\uC2A4\\uB9C8\\uB2E4 \\uD55C \\uC904\\uC5D0 \\uC8FC\\uC5B4\\uC9C4 \\uD1B5\\uB098\\uBB34\\uB4E4\\uB85C \\uB9CC\\uB4E4 \\uC218 \\uC788\\uB294 \\uCD5C\\uC18C \\uB09C\\uC774\\uB3C4\\uB97C \\uCD9C\\uB825\\uD558\\uC2DC\\uC624.\"), mdx(\"h4\", null, mdx(\"strong\", {\n    parentName: \"h4\"\n  }, \"\\uD480\\uC774\")), mdx(\"p\", null, \"\\uB108\\uBB34 \\uC5B4\\uB835\\uAC8C \\uC0DD\\uAC01\\uD574\\uC11C \\uC548\\uD480\\uB838\\uB358 \\uBB38\\uC81C\\uC774\\uB2E4.\\n\\uCC98\\uC74C\\uC5D0\\uB294 \\uADDC\\uCE59\\uC774 \\uC788\\uC744\\uAC70\\uB77C \\uC0DD\\uAC01\\uD574\\uC11C \\uC815\\uB82C\\uD55C \\uD6C4\\uC5D0 \\uC5B4\\uB5A4 \\uADDC\\uCE59\\uC744 \\uCC3E\\uC73C\\uB824\\uACE0 \\uACC4\\uC18D \\uACE0\\uBBFC\\uD588\\uB2E4.\"), mdx(\"p\", null, \"\\uACE0\\uBBFC\\uD558\\uB2E4\\uAC00 \\uBB38\\uB4DD '\\uADF8\\uB0E5 \\uC815\\uB82C\\uD55C \\uC0C1\\uD0DC\\uC5D0\\uC11C \\uC790\\uC2E0\\uC5D0\\uAC8C \\uAC00\\uAE4C\\uC6B4 \\uC22B\\uC790\\uB4E4\\uC744(\\uC606\\uC758 index)\\uC55E\\uB4A4\\uB85C \\uBD99\\uC5EC\\uC8FC\\uBA74 \\uB418\\uB294\\uAC70 \\uC544\\uB2CC\\uAC00?' \\uB77C\\uB294 \\uC0DD\\uAC01\\uC774 \\uB4E4\\uC5C8\\uACE0, \\uC774 \\uC544\\uC774\\uB514\\uC5B4\\uB85C \\uD574\\uACB0\\uD588\\uB2E4.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \" \", \"[Java \\uCF54\\uB4DC]\", \" \")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"import java.util.Scanner;\\nimport java.util.*;\\nimport java.util.Collections;\\n\\nclass Main {\\npublic static void main(String[] args) {\\n    int T;\\n    int n;\\n    int max_cnt;\\n    String number ;\\n    Scanner sc  = new Scanner(System.in);\\n\\n    T = Integer.parseInt(sc.nextLine());\\n    for (int i=0; i<T; i++){\\n        List<Integer> numList = new <Integer> ArrayList();\\n        List<Integer> answerList = new <Integer> ArrayList();\\n        n = Integer.parseInt(sc.nextLine());\\n        number = sc.nextLine();\\n        String[] num = number.split(\\\" \\\");\\n        for (int j=0; j<num.length; j++){\\n            int _num = Integer.parseInt(num[j]);\\n            numList.add(_num);\\n        }\\n        Collections.sort(numList);\\n        while(numList.size() > 0){\\n            answerList.add(numList.remove(0));\\n            if (numList.size() < 1){\\n                break;\\n            }\\n            answerList.add(0, numList.remove(0));\\n        }\\n        max_cnt=0;\\n        for (int k=0; k<answerList.size()-1; k++){\\n            if (Math.abs(answerList.get(k)-answerList.get(k+1)) > max_cnt){\\n            max_cnt = Math.abs(answerList.get(k)-answerList.get(k+1));\\n            }\\n        }\\n        if (Math.abs(answerList.get(0)-answerList.get(answerList.size()-1)) > max_cnt){\\n            max_cnt = Math.abs(answerList.get(0)-answerList.get(answerList.size()-1));\\n        }\\n        System.out.println(max_cnt);\\n    }\\n}\\n}\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \" \", \"[Python \\uCF54\\uB4DC]\", \" \")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"T = int(input())\\nfor _ in range(T):\\nN = int(input())\\nnumber = list(map(int, input().split()))\\nnumber.sort()\\n\\nnum=[]\\nwhile len(number)>0:\\n    num.append(number.pop(0))\\n    if len(number) > 0:\\n    num.insert(0, number.pop(0))\\n\\nmax_cnt=0\\nfor n in range(len(num)-1):\\n    if abs(num[n] - num[n+1]) > max_cnt:\\n    max_cnt = abs(num[n]-num[n+1])\\nif abs(num[0]-num[-1]) > max_cnt:\\n    max_cnt = abs(num[0]-num[-1])\\n\\nprint(max_cnt)\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"BOJ  11497번 문제 남규는 통나무를 세워 놓고 건너뛰기를 좋아한다. 그래서 N…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/java-boj-11497-번","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}