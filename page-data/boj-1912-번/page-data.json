{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/boj-1912-번","result":{"data":{"post":{"__typename":"MdxPost","slug":"/boj-1912-번","title":"BOJ_1912번","date":"21.02.2021","tags":[{"name":"BOJ","slug":"boj"}],"description":null,"canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"BOJ_1912번\",\n  \"date\": \"2021-02-21T00:00:00.000Z\",\n  \"tags\": [\"BOJ\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"blockquote\", null, mdx(\"h2\", {\n    parentName: \"blockquote\"\n  }, \"[BOJ]\", \" 1912\\uBC88\")), mdx(\"h4\", null, \"\\uBB38\\uC81C\"), mdx(\"p\", null, \"n\\uAC1C\\uC758 \\uC815\\uC218\\uB85C \\uC774\\uB8E8\\uC5B4\\uC9C4 \\uC784\\uC758\\uC758 \\uC218\\uC5F4\\uC774 \\uC8FC\\uC5B4\\uC9C4\\uB2E4. \\uC6B0\\uB9AC\\uB294 \\uC774 \\uC911 \\uC5F0\\uC18D\\uB41C \\uBA87 \\uAC1C\\uC758 \\uC218\\uB97C \\uC120\\uD0DD\\uD574\\uC11C \\uAD6C\\uD560 \\uC218 \\uC788\\uB294 \\uD569 \\uC911 \\uAC00\\uC7A5 \\uD070 \\uD569\\uC744 \\uAD6C\\uD558\\uB824\\uACE0 \\uD55C\\uB2E4. \\uB2E8, \\uC218\\uB294 \\uD55C \\uAC1C \\uC774\\uC0C1 \\uC120\\uD0DD\\uD574\\uC57C \\uD55C\\uB2E4.\"), mdx(\"p\", null, \"\\uC608\\uB97C \\uB4E4\\uC5B4\\uC11C 10, -4, 3, 1, 5, 6, -35, 12, 21, -1 \\uC774\\uB77C\\uB294 \\uC218\\uC5F4\\uC774 \\uC8FC\\uC5B4\\uC84C\\uB2E4\\uACE0 \\uD558\\uC790. \\uC5EC\\uAE30\\uC11C \\uC815\\uB2F5\\uC740 12+21\\uC778 33\\uC774 \\uC815\\uB2F5\\uC774 \\uB41C\\uB2E4.\"), mdx(\"h5\", null, \"\\uC785\\uB825\"), mdx(\"p\", null, \"\\uCCAB\\uC9F8 \\uC904\\uC5D0 \\uC815\\uC218 n(1 \\u2264 n \\u2264 100,000)\\uC774 \\uC8FC\\uC5B4\\uC9C0\\uACE0 \\uB458\\uC9F8 \\uC904\\uC5D0\\uB294 n\\uAC1C\\uC758 \\uC815\\uC218\\uB85C \\uC774\\uB8E8\\uC5B4\\uC9C4 \\uC218\\uC5F4\\uC774 \\uC8FC\\uC5B4\\uC9C4\\uB2E4. \\uC218\\uB294 -1,000\\uBCF4\\uB2E4 \\uD06C\\uAC70\\uB098 \\uAC19\\uACE0, 1,000\\uBCF4\\uB2E4 \\uC791\\uAC70\\uB098 \\uAC19\\uC740 \\uC815\\uC218\\uC774\\uB2E4.\"), mdx(\"h5\", null, \"\\uCD9C\\uB825\"), mdx(\"p\", null, \"\\uCCAB\\uC9F8 \\uC904\\uC5D0 \\uB2F5\\uC744 \\uCD9C\\uB825\\uD55C\\uB2E4.\"), mdx(\"h4\", null, mdx(\"strong\", {\n    parentName: \"h4\"\n  }, \"\\uD480\\uC774\")), mdx(\"p\", null, \"\\uC218\\uC5F4\\uC5D0\\uC11C \\uC21C\\uC11C\\uB300\\uB85C \\uC22B\\uC790 \\uD558\\uB098\\uC529 \\uD655\\uC778\\uD558\\uBA70 cnt(\\uC218\\uB4E4\\uC758 \\uD569\\uC744 \\uC800\\uC7A5\\uD558\\uB294 \\uBCC0\\uC218)\\uC758 \\uAC12\\uC744 \\uC5C5\\uB370\\uC774\\uD2B8\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"1. \\uD574\\uB2F9 \\uC218\\uAC00 \\uC591\\uC218\\uC774\\uB2E4. \\u279C cnt \\uBCC0\\uC218\\uC5D0 \\uB354\\uD568.\\n2. \\uD574\\uB2F9 \\uC218\\uAC00 \\uC74C\\uC218\\uC778 \\uACBD\\uC6B0\\n   \\uC6B0\\uC120 \\uC9C0\\uAE08\\uAE4C\\uC9C0\\uC758 \\uD569(cnt)\\uB97C list\\uC5D0 \\uC800\\uC7A5\\uD574\\uB454\\uB2E4.(\\uCD08\\uAE30\\uD654\\uD560 \\uC218\\uB3C4 \\uC788\\uC73C\\uBBC0\\uB85C.)\\n   2-1. \\uB9CC\\uC57D \\uC9C0\\uAE08\\uAE4C\\uC9C0\\uC758 \\uD569\\uC5D0 \\uD604\\uC7AC \\uD655\\uC778\\uD558\\uB294 \\uC218\\uB97C \\uB354\\uD558\\uC600\\uC744 \\uB54C 0\\uBCF4\\uB2E4 \\uD06C\\uC9C0 \\uC54A\\uB294\\uB2E4\\uBA74, \\uC774\\uC804\\uC758 \\uD569(cnt)\\uB4E4\\uC744 \\uCD08\\uAE30\\uD654\\uD568(0)\\n   2-2. \\uB9CC\\uC57D \\uC9C0\\uAE08\\uAE4C\\uC9C0\\uC758 \\uD569\\uC5D0 \\uD604\\uC7AC \\uD655\\uC778\\uD558\\uB294 \\uC218\\uB97C \\uB354\\uD558\\uC600\\uC744 \\uB54C 0\\uBCF4\\uB2E4 \\uD06C\\uB2E4\\uBA74, \\uD604\\uC7AC \\uC218\\uB97C \\uB354\\uD568\\n\")), mdx(\"p\", null, \"\\uB2E4\\uC774\\uB098\\uBBF9 \\uD504\\uB85C\\uADF8\\uB798\\uBC0D \\uBC29\\uC2DD\\uC73C\\uB85C \\uAC04\\uACB0\\uD558\\uAC8C \\uD480 \\uC218 \\uC788\\uB294 \\uBB38\\uC81C\\uC778\\uB370, \\uADF8\\uB0E5 \\uAD6C\\uD604\\uD574\\uBC84\\uB838\\uB2E4.\"), mdx(\"p\", null, \"\\uC544\\uC9C1 \\uB2E4\\uC774\\uB098\\uBBF9 \\uD504\\uB85C\\uADF8\\uB798\\uBC0D \\uBC29\\uC2DD\\uC774 \\uC190\\uC5D0 \\uC775\\uC9C0 \\uC54A\\uB294\\uB2E4.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \" \", \"[\\uCF54\\uB4DC]\", \" \")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"n = map(int, input().split(\\\" \\\"))\\nnum = list(map(int, input().split(\\\" \\\")))\\nans=[]\\nif num[0] > 0:\\n  ans=[num[0]]\\nif len(ans)>0:\\n  cnt=ans[0]\\nelse:\\n  cnt=0\\n\\nfor i in range(1,len(num)):\\n  if num[i] > 0:\\n    cnt+=num[i]\\n  else:\\n    if cnt !=0:\\n      ans.append(cnt)\\n    if cnt + num[i] > 0:\\n      cnt +=num[i]\\n    else:\\n      cnt=0\\nif cnt !=0:\\n  ans.append(cnt)\\nans.append(max(num))\\nprint(max(ans))\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"BOJ  1912번 문제 n개의 정수로 이루어진 임의의 수열이 주어진다. 우리는 이 중 연속된 몇 개의 수를 선택해서 구할 수 있는 합 중 가장 큰 합을 구하려고 한다. 단, 수는 한 개 이상 선택해야 한다. 예를 들어서 10, -4, 3, 1,…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/boj-1912-번","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}