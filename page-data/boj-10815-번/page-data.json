{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/boj-10815-번","result":{"data":{"post":{"__typename":"MdxPost","slug":"/boj-10815-번","title":"BOJ_10815번","date":"29.01.2021","tags":[{"name":"BOJ","slug":"boj"}],"description":null,"canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"BOJ_10815번\",\n  \"date\": \"2021-01-29T00:00:00.000Z\",\n  \"tags\": [\"BOJ\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"blockquote\", null, mdx(\"h2\", {\n    parentName: \"blockquote\"\n  }, \"[BOJ]\", \" 10815\\uBC88\")), mdx(\"h4\", null, \"\\uBB38\\uC81C\"), mdx(\"p\", null, \"\\uC22B\\uC790 \\uCE74\\uB4DC\\uB294 \\uC815\\uC218 \\uD558\\uB098\\uAC00 \\uC801\\uD600\\uC838 \\uC788\\uB294 \\uCE74\\uB4DC\\uC774\\uB2E4. \\uC0C1\\uADFC\\uC774\\uB294 \\uC22B\\uC790 \\uCE74\\uB4DC N\\uAC1C\\uB97C \\uAC00\\uC9C0\\uACE0 \\uC788\\uB2E4.\\n\\uC815\\uC218 M\\uAC1C\\uAC00 \\uC8FC\\uC5B4\\uC84C\\uC744 \\uB54C, \\uC774 \\uC218\\uAC00 \\uC801\\uD600\\uC788\\uB294 \\uC22B\\uC790 \\uCE74\\uB4DC\\uB97C \\uC0C1\\uADFC\\uC774\\uAC00 \\uAC00\\uC9C0\\uACE0 \\uC788\\uB294\\uC9C0 \\uC544\\uB2CC\\uC9C0\\uB97C \\uAD6C\\uD558\\uB294 \\uD504\\uB85C\\uADF8\\uB7A8\\uC744 \\uC791\\uC131\\uD558\\uC2DC\\uC624.\"), mdx(\"h5\", null, \"\\uC785\\uB825\"), mdx(\"p\", null, \"\\uCCAB\\uC9F8 \\uC904\\uC5D0 \\uC0C1\\uADFC\\uC774\\uAC00 \\uAC00\\uC9C0\\uACE0 \\uC788\\uB294 \\uC22B\\uC790 \\uCE74\\uB4DC\\uC758 \\uAC1C\\uC218 N(1 \\u2264 N \\u2264 500,000)\\uC774 \\uC8FC\\uC5B4\\uC9C4\\uB2E4. \\uB458\\uC9F8 \\uC904\\uC5D0\\uB294 \\uC22B\\uC790 \\uCE74\\uB4DC\\uC5D0 \\uC801\\uD600\\uC788\\uB294 \\uC815\\uC218\\uAC00 \\uC8FC\\uC5B4\\uC9C4\\uB2E4. \\uC22B\\uC790 \\uCE74\\uB4DC\\uC5D0 \\uC801\\uD600\\uC788\\uB294 \\uC218\\uB294 -10,000,000\\uBCF4\\uB2E4 \\uD06C\\uAC70\\uB098 \\uAC19\\uACE0, 10,000,000\\uBCF4\\uB2E4 \\uC791\\uAC70\\uB098 \\uAC19\\uB2E4. \\uB450 \\uC22B\\uC790 \\uCE74\\uB4DC\\uC5D0 \\uAC19\\uC740 \\uC218\\uAC00 \\uC801\\uD600\\uC788\\uB294 \\uACBD\\uC6B0\\uB294 \\uC5C6\\uB2E4.\"), mdx(\"p\", null, \"\\uC14B\\uC9F8 \\uC904\\uC5D0\\uB294 M(1 \\u2264 M \\u2264 500,000)\\uC774 \\uC8FC\\uC5B4\\uC9C4\\uB2E4. \\uB137\\uC9F8 \\uC904\\uC5D0\\uB294 \\uC0C1\\uADFC\\uC774\\uAC00 \\uAC00\\uC9C0\\uACE0 \\uC788\\uB294 \\uC22B\\uC790 \\uCE74\\uB4DC\\uC778\\uC9C0 \\uC544\\uB2CC\\uC9C0\\uB97C \\uAD6C\\uD574\\uC57C \\uD560 M\\uAC1C\\uC758 \\uC815\\uC218\\uAC00 \\uC8FC\\uC5B4\\uC9C0\\uBA70, \\uC774 \\uC218\\uB294 \\uACF5\\uBC31\\uC73C\\uB85C \\uAD6C\\uBD84\\uB418\\uC5B4\\uC838 \\uC788\\uB2E4. \\uC774 \\uC218\\uB3C4 -10,000,000\\uBCF4\\uB2E4 \\uD06C\\uAC70\\uB098 \\uAC19\\uACE0, 10,000,000\\uBCF4\\uB2E4 \\uC791\\uAC70\\uB098 \\uAC19\\uB2E4\"), mdx(\"h5\", null, \"\\uCD9C\\uB825\"), mdx(\"p\", null, \"\\uCCAB\\uC9F8 \\uC904\\uC5D0 \\uC785\\uB825\\uC73C\\uB85C \\uC8FC\\uC5B4\\uC9C4 M\\uAC1C\\uC758 \\uC218\\uC5D0 \\uB300\\uD574\\uC11C, \\uAC01 \\uC218\\uAC00 \\uC801\\uD78C \\uC22B\\uC790 \\uCE74\\uB4DC\\uB97C \\uC0C1\\uADFC\\uC774\\uAC00 \\uAC00\\uC9C0\\uACE0 \\uC788\\uC73C\\uBA74 1\\uC744, \\uC544\\uB2C8\\uBA74 0\\uC744 \\uACF5\\uBC31\\uC73C\\uB85C \\uAD6C\\uBD84\\uD574 \\uCD9C\\uB825\\uD55C\\uB2E4.\"), mdx(\"h4\", null, mdx(\"strong\", {\n    parentName: \"h4\"\n  }, \"\\uD480\\uC774\")), mdx(\"p\", null, \"\\uC6B0\\uC120 \\uC0C1\\uADFC\\uC774\\uAC00 \\uAC00\\uC9C0\\uACE0 \\uC788\\uB294 \\uCE74\\uB4DC\\uC640 \\uC0C1\\uADFC\\uC774\\uAC00 \\uAC00\\uC9C0\\uACE0 \\uC788\\uB294\\uC9C0 \\uD655\\uC778\\uD574\\uC57C \\uD560 \\uCE74\\uB4DC\\uB4E4\\uC744 \\uAC01\\uAC01 \\uC815\\uB82C\\uD55C\\uB2E4.\\n\\uB137\\uC9F8 \\uC904\\uC5D0\\uC11C \\uC8FC\\uC5B4\\uC9C0\\uB294 \\uC0C1\\uADFC\\uC774\\uAC00 \\uAC00\\uC9C0\\uACE0 \\uC788\\uB294\\uC9C0 \\uD655\\uC778\\uD574\\uC57C \\uD558\\uB294 \\uCE74\\uB4DC\\uB4E4\\uC744 \\uC774\\uBD84\\uD0D0\\uC0C9 \\uBC29\\uBC95\\uC73C\\uB85C \\uD558\\uB098\\uC529 \\uD655\\uC778\\uD55C\\uB2E4.\"), mdx(\"p\", null, \"\\uBB38\\uC81C\\uB294 \\uAC04\\uB2E8\\uD55C\\uB370 \\uC2DC\\uAC04 \\uBCF5\\uC7A1\\uB3C4\\uAC00 O(N)\\uC774\\uBA74 \\uD1B5\\uACFC\\uB418\\uC9C0 \\uC54A\\uB294\\uB2E4.\\n\\uB530\\uB77C\\uC11C \\uC774\\uBD84\\uD0D0\\uC0C9 O(logN) \\uC73C\\uB85C \\uD480\\uC5B4\\uC57C \\uD588\\uB2E4.\"), mdx(\"p\", null, \"\\uC774 \\uBB38\\uC81C\\uB294 \\uAD1C\\uCC2E\\uC558\\uB294\\uB370, \\uB2E4\\uB978 \\uC774\\uBD84\\uD0D0\\uC0C9 \\uBB38\\uC81C\\uB4E4 \\uB108\\uBB34 \\uC5B4\\uB835\\uB2E4.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \" \", \"[\\uCF54\\uB4DC]\", \" \")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"n = int(input())\\nn_list = sorted(list(map(int, input().split(\\\" \\\"))))\\nm = int(input())\\nm_list = list(map(int, input().split(\\\" \\\")))\\n\\ndef bs(_list, target, start, end):\\n  while start <= end:\\n    mid = (start+end)//2\\n    if _list[mid] == target:\\n      return 1\\n    elif _list[mid] > target:\\n      end = mid-1\\n    else:\\n      start = mid+1\\n  return 0\\n\\nfor num in m_list:\\n  result = bs(n_list, num, 0, n-1)\\n  print(result, end=\\\" \\\")\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"BOJ  10815번 문제 숫자 카드는 정수 하나가 적혀져 있는 카드이다. 상근이는 숫자 카드 N개를 가지고 있다. \n정수 M…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/boj-10815-번","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}