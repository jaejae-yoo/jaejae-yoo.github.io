{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/python-programmers-49189-번","result":{"data":{"post":{"__typename":"MdxPost","slug":"/python-programmers-49189-번","title":"[Python] programmers 49189번","date":"06.04.2021","tags":[{"name":"programmers","slug":"programmers"}],"description":null,"canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"[Python] programmers 49189번\",\n  \"date\": \"2021-04-06T00:00:00.000Z\",\n  \"tags\": [\"programmers\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"blockquote\", null, mdx(\"h2\", {\n    parentName: \"blockquote\"\n  }, \"[programmers]\", \" 49189\\uBC88\")), mdx(\"h4\", null, \"\\uBB38\\uC81C\"), mdx(\"p\", null, \"n\\uAC1C\\uC758 \\uB178\\uB4DC\\uAC00 \\uC788\\uB294 \\uADF8\\uB798\\uD504\\uAC00 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uAC01 \\uB178\\uB4DC\\uB294 1\\uBD80\\uD130 n\\uAE4C\\uC9C0 \\uBC88\\uD638\\uAC00 \\uC801\\uD600\\uC788\\uC2B5\\uB2C8\\uB2E4. 1\\uBC88 \\uB178\\uB4DC\\uC5D0\\uC11C \\uAC00\\uC7A5 \\uBA40\\uB9AC \\uB5A8\\uC5B4\\uC9C4 \\uB178\\uB4DC\\uC758 \\uAC2F\\uC218\\uB97C \\uAD6C\\uD558\\uB824\\uACE0 \\uD569\\uB2C8\\uB2E4. \\uAC00\\uC7A5 \\uBA40\\uB9AC \\uB5A8\\uC5B4\\uC9C4 \\uB178\\uB4DC\\uB780 \\uCD5C\\uB2E8\\uACBD\\uB85C\\uB85C \\uC774\\uB3D9\\uD588\\uC744 \\uB54C \\uAC04\\uC120\\uC758 \\uAC1C\\uC218\\uAC00 \\uAC00\\uC7A5 \\uB9CE\\uC740 \\uB178\\uB4DC\\uB4E4\\uC744 \\uC758\\uBBF8\\uD569\\uB2C8\\uB2E4.\"), mdx(\"p\", null, \"\\uB178\\uB4DC\\uC758 \\uAC1C\\uC218 n, \\uAC04\\uC120\\uC5D0 \\uB300\\uD55C \\uC815\\uBCF4\\uAC00 \\uB2F4\\uAE34 2\\uCC28\\uC6D0 \\uBC30\\uC5F4 vertex\\uAC00 \\uB9E4\\uAC1C\\uBCC0\\uC218\\uB85C \\uC8FC\\uC5B4\\uC9C8 \\uB54C, 1\\uBC88 \\uB178\\uB4DC\\uB85C\\uBD80\\uD130 \\uAC00\\uC7A5 \\uBA40\\uB9AC \\uB5A8\\uC5B4\\uC9C4 \\uB178\\uB4DC\\uAC00 \\uBA87 \\uAC1C\\uC778\\uC9C0\\uB97C return \\uD558\\uB3C4\\uB85D solution \\uD568\\uC218\\uB97C \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC694.\"), mdx(\"h5\", null, \"\\uC81C\\uD55C\\uC0AC\\uD56D\"), mdx(\"p\", null, \"\\uB178\\uB4DC\\uC758 \\uAC1C\\uC218 n\\uC740 2 \\uC774\\uC0C1 20,000 \\uC774\\uD558\\uC785\\uB2C8\\uB2E4.\"), mdx(\"p\", null, \"\\uAC04\\uC120\\uC740 \\uC591\\uBC29\\uD5A5\\uC774\\uBA70 \\uCD1D 1\\uAC1C \\uC774\\uC0C1 50,000\\uAC1C \\uC774\\uD558\\uC758 \\uAC04\\uC120\\uC774 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"p\", null, \"vertex \\uBC30\\uC5F4 \\uAC01 \\uD589 \", \"[a, b]\", \"\\uB294 a\\uBC88 \\uB178\\uB4DC\\uC640 b\\uBC88 \\uB178\\uB4DC \\uC0AC\\uC774\\uC5D0 \\uAC04\\uC120\\uC774 \\uC788\\uB2E4\\uB294 \\uC758\\uBBF8\\uC785\\uB2C8\\uB2E4.\"), mdx(\"h5\", null, \"\\uC785\\uCD9C\\uB825 \\uC608\"), mdx(\"p\", null, \"n\\tvertex\\treturn\"), mdx(\"p\", null, \"6\\t[\", \"[3, 6]\", \", \", \"[4, 3]\", \", \", \"[3, 2]\", \", \", \"[1, 3]\", \", \", \"[1, 2]\", \", \", \"[2, 4]\", \", \", \"[5, 2]\", \"]\\t3\"), mdx(\"h4\", null, mdx(\"strong\", {\n    parentName: \"h4\"\n  }, \"\\uD480\\uC774\")), mdx(\"p\", null, \"\\uB178\\uB4DC 1\\uBD80\\uD130 \\uC2DC\\uC791\\uD558\\uC5EC bfs\\uB85C \\uD0D0\\uC0C9\\uD558\\uBA74\\uC11C, \\uD604\\uC7AC \\uB178\\uB4DC\\uC640 \\uC5F0\\uACB0\\uB418\\uC5B4 \\uC788\\uB294 \\uBD80\\uBAA8\\uB178\\uB4DC(\\uC608\\uB97C \\uB4E4\\uC5B4, \\uC785\\uCD9C\\uB825 \\uC608\\uC758 \\uB178\\uB4DC 2\\uC774\\uBA74 \\uBD80\\uBAA8\\uB178\\uB4DC\\uB294 1)\\uC758 \\uAC70\\uB9AC\\uC5D0 +1\\uC77C \\uD558\\uBA74 \\uC790\\uC2E0\\uACFC \\uB178\\uB4DC 1\\uC758 \\uAC70\\uB9AC\\uAC00 \\uB41C\\uB2E4.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \" \", \"[\\uCF54\\uB4DC]\", \" \")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"def solution(n, edge):\\n    answer = 0\\n    graph=[[] for _ in range(n+1)]\\n    for road in edge:\\n        graph[road[0]].append(road[1])\\n        graph[road[1]].append(road[0])\\n    \\n    a = [[1] for _ in range(n+1)]\\n    a[0],a[1] = [0],[0]\\n    def bfs(graph, visited, v):\\n        while True:\\n            s = v.pop(0)\\n            for x in graph[s]:\\n                if visited[x] == False:\\n                    a[x][0] = a[s][0]+1\\n                    visited[x]=True\\n                    v.append(x)\\n            if len(v) < 1:\\n                break\\n                \\n    visited= [False]*(n+1)\\n    visited[1]=True\\n    bfs(graph, visited, [1])\\n    cnt_max = max(a)[0]\\n    for n in a:\\n        if n[0] == cnt_max:\\n            answer+=1\\n    return answer\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"programmers  49189번 문제 n개의 노드가 있는 그래프가 있습니다. 각 노드는 1부터 n까지 번호가 적혀있습니다.…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/python-programmers-49189-번","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}