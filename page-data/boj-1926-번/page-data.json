{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/boj-1926-번","result":{"data":{"post":{"__typename":"MdxPost","slug":"/boj-1926-번","title":"BOJ_1926번","date":"02.02.2021","tags":[{"name":"BOJ","slug":"boj"}],"description":null,"canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"BOJ_1926번\",\n  \"date\": \"2021-02-02T00:00:00.000Z\",\n  \"tags\": [\"BOJ\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"blockquote\", null, mdx(\"h2\", {\n    parentName: \"blockquote\"\n  }, \"[BOJ]\", \" 1926\\uBC88\")), mdx(\"h4\", null, \"\\uBB38\\uC81C\"), mdx(\"p\", null, \"\\uC5B4\\uB5A4 \\uD070 \\uB3C4\\uD654\\uC9C0\\uC5D0 \\uADF8\\uB9BC\\uC774 \\uADF8\\uB824\\uC838 \\uC788\\uC744 \\uB54C, \\uADF8 \\uADF8\\uB9BC\\uC758 \\uAC1C\\uC218\\uC640, \\uADF8 \\uADF8\\uB9BC \\uC911 \\uB113\\uC774\\uAC00 \\uAC00\\uC7A5 \\uB113\\uC740 \\uAC83\\uC758 \\uB113\\uC774\\uB97C \\uCD9C\\uB825\\uD558\\uC5EC\\uB77C. \\uB2E8, \\uADF8\\uB9BC\\uC774\\uB77C\\uB294 \\uAC83\\uC740 1\\uB85C \\uC5F0\\uACB0\\uB41C \\uAC83\\uC744 \\uD55C \\uADF8\\uB9BC\\uC774\\uB77C\\uACE0 \\uC815\\uC758\\uD558\\uC790. \\uAC00\\uB85C\\uB098 \\uC138\\uB85C\\uB85C \\uC5F0\\uACB0\\uB41C \\uAC83\\uC740 \\uC5F0\\uACB0\\uC774 \\uB41C \\uAC83\\uC774\\uACE0 \\uB300\\uAC01\\uC120\\uC73C\\uB85C \\uC5F0\\uACB0\\uC774 \\uB41C \\uAC83\\uC740 \\uB5A8\\uC5B4\\uC9C4 \\uADF8\\uB9BC\\uC774\\uB2E4. \\uADF8\\uB9BC\\uC758 \\uB113\\uC774\\uB780 \\uADF8\\uB9BC\\uC5D0 \\uD3EC\\uD568\\uB41C 1\\uC758 \\uAC1C\\uC218\\uC774\\uB2E4.\"), mdx(\"h5\", null, \"\\uC785\\uB825\"), mdx(\"p\", null, \"\\uCCAB\\uC9F8 \\uC904\\uC5D0 \\uB3C4\\uD654\\uC9C0\\uC758 \\uC138\\uB85C \\uD06C\\uAE30 n(1 \\u2264 n \\u2264 500)\\uACFC \\uAC00\\uB85C \\uD06C\\uAE30 m(1 \\u2264 m \\u2264 500)\\uC774 \\uCC28\\uB840\\uB85C \\uC8FC\\uC5B4\\uC9C4\\uB2E4. \\uB450 \\uBC88\\uC9F8 \\uC904\\uBD80\\uD130 n+1 \\uC904 \\uAE4C\\uC9C0 \\uADF8\\uB9BC\\uC758 \\uC815\\uBCF4\\uAC00 \\uC8FC\\uC5B4\\uC9C4\\uB2E4. (\\uB2E8 \\uADF8\\uB9BC\\uC758 \\uC815\\uBCF4\\uB294 0\\uACFC 1\\uC774 \\uACF5\\uBC31\\uC744 \\uB450\\uACE0 \\uC8FC\\uC5B4\\uC9C0\\uBA70, 0\\uC740 \\uC0C9\\uCE60\\uC774 \\uC548\\uB41C \\uBD80\\uBD84, 1\\uC740 \\uC0C9\\uCE60\\uC774 \\uB41C \\uBD80\\uBD84\\uC744 \\uC758\\uBBF8\\uD55C\\uB2E4)\"), mdx(\"h5\", null, \"\\uCD9C\\uB825\"), mdx(\"p\", null, \"\\uCCAB\\uC9F8 \\uC904\\uC5D0\\uB294 \\uADF8\\uB9BC\\uC758 \\uAC1C\\uC218, \\uB458\\uC9F8 \\uC904\\uC5D0\\uB294 \\uADF8 \\uC911 \\uAC00\\uC7A5 \\uB113\\uC740 \\uADF8\\uB9BC\\uC758 \\uB113\\uC774\\uB97C \\uCD9C\\uB825\\uD558\\uC5EC\\uB77C. \\uB2E8, \\uADF8\\uB9BC\\uC774 \\uD558\\uB098\\uB3C4 \\uC5C6\\uB294 \\uACBD\\uC6B0\\uC5D0\\uB294 \\uAC00\\uC7A5 \\uB113\\uC740 \\uADF8\\uB9BC\\uC758 \\uB113\\uC774\\uB294 0\\uC774\\uB2E4.\"), mdx(\"h4\", null, mdx(\"strong\", {\n    parentName: \"h4\"\n  }, \"\\uD480\\uC774\")), mdx(\"p\", null, \"\\uC774 \\uBB38\\uC81C\\uB294 bfs\\uB85C \\uD480 \\uC218 \\uC788\\uC5C8\\uB2E4.\"), mdx(\"p\", null, \"x, y \\uC88C\\uD45C\\uB97C \\uAE30\\uC900\\uC73C\\uB85C \\uC0C1,\\uD558,\\uC88C,\\uC6B0\\uC5D0 1\\uC774 \\uC788\\uC73C\\uBA74 \\uD558\\uB098\\uC758 \\uADF8\\uB9BC\\uC73C\\uB85C \\uC778\\uC9C0\\uD558\\uACE0 queue\\uC5D0 \\uD574\\uB2F9 \\uC88C\\uD45C\\uB97C \\uC800\\uC7A5\\uD55C\\uB2E4.(queue\\uC758 \\uD06C\\uAE30\\uAC00 1\\uC774\\uC0C1\\uC77C \\uB54C\\uAE4C\\uC9C0 \\uC9C0\\uC18D\\uD55C\\uB2E4.)\\n\\uD0D0\\uC0C9\\uC744 \\uD558\\uBA74\\uC11C 1\\uC758 \\uAC1C\\uC218\\uB97C \\uC138\\uACE0 return \\uC9C1\\uC804\\uC5D0 cnt\\uB97C answer \\uB9AC\\uC2A4\\uD2B8\\uC5D0 append\\uD55C\\uB2E4.(\\uADF8\\uB9BC\\uC758 \\uB113\\uC774\\uB97C \\uC54C\\uAE30 \\uC704\\uD568)\"), mdx(\"p\", null, \"bfs\\uD568\\uC218\\uB97C \\uD638\\uCD9C\\uD558\\uC5EC return\\uB41C \\uD69F\\uC218\\uAC00 \\uADF8\\uB9BC\\uC758 \\uAC2F\\uC218\\uC774\\uB2E4.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \" \", \"[\\uCF54\\uB4DC]\", \" \")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"from collections import deque\\n\\ndef bfs(x, y):\\n  queue = deque()\\n  queue.append((x,y))\\n  graph[x][y] = 0\\n  cnt = 1\\n\\n  while queue:\\n    x, y = queue.popleft()\\n    for i in range(4):\\n      nx = x + dx[i]\\n      ny = y + dy[i]\\n\\n      if nx < 0 or ny <0 or nx>=N or ny>=M:\\n        continue\\n      if graph[nx][ny] == 1:\\n        graph[nx][ny] = 0\\n        queue.append((nx, ny))\\n        cnt+=1\\n  answer.append(cnt)\\n  return \\n\\nN, M =map(int, input().split(\\\" \\\"))\\ngraph =[]\\nfor num in range(N):\\n  graph.append(list(map(int, input().split(\\\" \\\"))))\\n\\ndx = [-1,1,0,0]\\ndy = [0,0,-1,1]\\nanswer=[]\\nresult = 0\\nfor i in range(N):\\n  for j in range(M):\\n    if graph[i][j] == 1:\\n      bfs(i, j)\\n      result +=1\\n\\nif result > 0:\\n  print(result)\\n  print(max(answer))\\nelse:\\n  print(result)\\n  print(0)   \\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"BOJ  1926번 문제 어떤 큰 도화지에 그림이 그려져 있을 때, 그 그림의 개수와, 그 그림 중 넓이가 가장 넓은 것의 넓이를 출력하여라. 단, 그림이라는 것은…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/boj-1926-번","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}